rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isSuperAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "SUPER_ADMIN";
    }
    
    function isClinicOwner() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "CLINIC_OWNER";
    }
    
    function isClinicAdmin() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "ADMIN";
    }
    
    function isMedicalStaff() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "MEDICAL_STAFF";
    }
    
    function isReceptionist() {
      return isAuthenticated() && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "RECEPTIONIST";
    }
    
    function getUserClinicId() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.clinicId;
    }
    
    function isUserInClinic(clinicId) {
      return isAuthenticated() && (isSuperAdmin() || getUserClinicId() == clinicId);
    }
    
    function isResourceOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Users collection
    match /users/{userId} {
      // Users can read their own profile
      // Super admins can read and write all user profiles
      // Users can update their own profile
      allow read: if isResourceOwner(userId) || isSuperAdmin();
      allow create: if isSuperAdmin();
      allow update: if isResourceOwner(userId) || isSuperAdmin();
      allow delete: if isSuperAdmin();
    }
    
    // Clinics collection
    match /clinics/{clinicId} {
      // Super admins can do anything
      // Clinic owners can read and update their own clinic
      // Clinic staff can read their own clinic
      allow read: if isSuperAdmin() || isUserInClinic(clinicId);
      allow create: if isSuperAdmin();
      allow update: if isSuperAdmin() || (isClinicOwner() && isUserInClinic(clinicId));
      allow delete: if isSuperAdmin();
      
      // Nested collections within a clinic
      match /patients/{patientId} {
        // Super admins can do anything
        // Clinic staff can read all patients in their clinic
        // Clinic owners and admins can create, update, and delete patients
        // Medical staff can update patients
        // Receptionists can create and update patients
        allow read: if isSuperAdmin() || isUserInClinic(clinicId);
        allow create: if isSuperAdmin() || (isUserInClinic(clinicId) && (isClinicOwner() || isClinicAdmin() || isReceptionist()));
        allow update: if isSuperAdmin() || (isUserInClinic(clinicId) && (isClinicOwner() || isClinicAdmin() || isMedicalStaff() || isReceptionist()));
        allow delete: if isSuperAdmin() || (isUserInClinic(clinicId) && (isClinicOwner() || isClinicAdmin()));
      }
      
      match /appointments/{appointmentId} {
        // Super admins can do anything
        // Clinic staff can read all appointments in their clinic
        // All clinic staff can create and update appointments
        // Clinic owners, admins, and receptionists can delete appointments
        allow read: if isSuperAdmin() || isUserInClinic(clinicId);
        allow create: if isSuperAdmin() || isUserInClinic(clinicId);
        allow update: if isSuperAdmin() || isUserInClinic(clinicId);
        allow delete: if isSuperAdmin() || (isUserInClinic(clinicId) && (isClinicOwner() || isClinicAdmin() || isReceptionist()));
      }
      
      match /staff/{staffId} {
        // Super admins can do anything
        // Clinic staff can read all staff in their clinic
        // Clinic owners can create, update, and delete staff
        // Admins can create and update staff
        allow read: if isSuperAdmin() || isUserInClinic(clinicId);
        allow create: if isSuperAdmin() || (isUserInClinic(clinicId) && (isClinicOwner() || isClinicAdmin()));
        allow update: if isSuperAdmin() || (isUserInClinic(clinicId) && (isClinicOwner() || isClinicAdmin()));
        allow delete: if isSuperAdmin() || (isUserInClinic(clinicId) && isClinicOwner());
      }
      
      match /settings/{settingId} {
        // Super admins can do anything
        // Clinic staff can read all settings in their clinic
        // Clinic owners and admins can update settings
        allow read: if isSuperAdmin() || isUserInClinic(clinicId);
        allow create: if isSuperAdmin() || (isUserInClinic(clinicId) && (isClinicOwner() || isClinicAdmin()));
        allow update: if isSuperAdmin() || (isUserInClinic(clinicId) && (isClinicOwner() || isClinicAdmin()));
        allow delete: if isSuperAdmin();
      }
      
      match /billing/{billingId} {
        // Super admins can do anything
        // Clinic owners and admins can read and create billing records
        // Only clinic owners can update billing
        // Only super admins can delete billing records
        allow read: if isSuperAdmin() || (isUserInClinic(clinicId) && (isClinicOwner() || isClinicAdmin() || isReceptionist()));
        allow create: if isSuperAdmin() || (isUserInClinic(clinicId) && (isClinicOwner() || isClinicAdmin() || isReceptionist()));
        allow update: if isSuperAdmin() || (isUserInClinic(clinicId) && isClinicOwner());
        allow delete: if isSuperAdmin();
      }
    }
    
    // Staff collection (flat structure)
    match /staff/{staffId} {
      // Super admins can do anything
      // Staff can read their own record
      // Clinic owners can read, update, and delete staff in their clinic
      // Admins can read and update staff in their clinic
      allow read: if isSuperAdmin() || isResourceOwner(staffId) || 
                   (isUserInClinic(resource.data.clinicId) && (isClinicOwner() || isClinicAdmin()));
      allow create: if isSuperAdmin() || 
                     (isUserInClinic(request.resource.data.clinicId) && (isClinicOwner() || isClinicAdmin()));
      allow update: if isSuperAdmin() || isResourceOwner(staffId) || 
                     (isUserInClinic(resource.data.clinicId) && (isClinicOwner() || isClinicAdmin()));
      allow delete: if isSuperAdmin() || 
                     (isUserInClinic(resource.data.clinicId) && isClinicOwner());
    }
    
    // Patients collection (flat structure)
    match /patients/{patientId} {
      // Super admins can do anything
      // Clinic staff can read, create, update patients in their clinic
      // Only clinic owners and admins can delete patients
      allow read: if isSuperAdmin() || isUserInClinic(resource.data.clinicId);
      allow create: if isSuperAdmin() || isUserInClinic(request.resource.data.clinicId);
      allow update: if isSuperAdmin() || isUserInClinic(resource.data.clinicId);
      allow delete: if isSuperAdmin() || 
                     (isUserInClinic(resource.data.clinicId) && (isClinicOwner() || isClinicAdmin()));
    }
    
    // Appointments collection (flat structure)
    match /appointments/{appointmentId} {
      // Super admins can do anything
      // Clinic staff can read, create, update appointments in their clinic
      // Clinic owners, admins, and receptionists can delete appointments
      allow read: if isSuperAdmin() || isUserInClinic(resource.data.clinicId);
      allow create: if isSuperAdmin() || isUserInClinic(request.resource.data.clinicId);
      allow update: if isSuperAdmin() || isUserInClinic(resource.data.clinicId);
      allow delete: if isSuperAdmin() || 
                     (isUserInClinic(resource.data.clinicId) && (isClinicOwner() || isClinicAdmin() || isReceptionist()));
    }
  }
}
